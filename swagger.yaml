openapi: 3.0.0
info:
  title: Estocando API
  description: API para controle de estoque simples. Permite gerenciar itens, usuários e visualizar relatórios de movimentação.
  version: 1.0.0
servers:
  - url: http://localhost:3333
    description: Servidor de Desenvolvimento Local

tags:
  - name: Itens
    description: Operações relacionadas aos itens em estoque.
  - name: Usuários
    description: Gerenciamento de usuários do sistema.
  - name: Relatórios
    description: Endpoints para visualização de dados e logs.
  - name: Status
    description: Verificação de status da API.

paths:
  /:
    get:
      tags:
        - Status
      summary: Página inicial da API
      description: Retorna uma página HTML de boas-vindas para confirmar que a API está no ar.
      responses:
        '200':
          description: Sucesso. Retorna a página HTML.
          content:
            text/html:
              schema:
                type: string
                example: '<html>...</html>'

  /users:
    post:
      tags:
        - Usuários
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '201':
          description: Usuário criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Erro de validação (ex: nome não fornecido).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorValidation'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Usuários
      summary: Lista todos os usuários
      responses:
        '200':
          description: Lista de usuários retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    get:
      tags:
        - Usuários
      summary: Busca um usuário pelo ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Usuário encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Usuários
      summary: Atualiza um usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInput'
      responses:
        '200':
          description: Usuário atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Usuários
      summary: Remove um usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Usuário removido com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /items:
    post:
      tags:
        - Itens
      summary: Cria um novo item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemInput'
      responses:
        '201':
          description: Item criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Erro de validação.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorValidation'
    get:
      tags:
        - Itens
      summary: Lista todos os itens
      responses:
        '200':
          description: Lista de itens retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'

  /items/{id}:
    get:
      tags:
        - Itens
      summary: Busca um item pelo ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Item encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Item não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Itens
      summary: Atualiza um item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemInput'
      responses:
        '200':
          description: Item atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Item não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Itens
      summary: Remove um item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Item removido com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Item não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /items/{id}/adjust:
    post:
      tags:
        - Itens
      summary: Ajusta a quantidade de um item em estoque
      description: Realiza uma operação de entrada (IN) ou saída (OUT) no estoque de um item.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustStockInput'
      responses:
        '200':
          description: Estoque ajustado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: 'Requisição inválida (ex: quantidade insuficiente, usuário não encontrado).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Item não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reports/stock-levels:
    get:
      tags:
        - Relatórios
      summary: Retorna os níveis de estoque de todos os itens
      responses:
        '200':
          description: Níveis de estoque retornados com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'

  /reports/recent-adjustments:
    get:
      tags:
        - Relatórios
      summary: Lista os ajustes de estoque mais recentes
      parameters:
        - name: limit
          in: query
          description: 'Número de registros a serem retornados (1-100). Padrão é 20.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Lista de ajustes recentes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockAdjustmentWithDetails'

  /reports/logs:
    get:
      tags:
        - Relatórios
      summary: Retorna os logs de requisição mais recentes
      parameters:
        - name: limit
          in: query
          description: 'Número de logs a serem retornados (1-100). Padrão é 25.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
      responses:
        '200':
          description: Lista de logs de requisição.
          content:
            application/json:
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RequestLog'
        '400':
          description: "Parâmetro 'limit' fora do intervalo permitido."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reports/{id}:
    get:
      tags:
        - Relatórios
      summary: Busca um registro de ajuste de estoque pelo ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Registro de ajuste encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustment'
        '404':
          description: Registro não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Relatórios
      summary: Atualiza um registro de ajuste de estoque (Uso não recomendado)
      description: "A funcionalidade deste endpoint é incerta. Aparenta atualizar um registro de ajuste com dados de item, o que pode não ser o comportamento esperado. Use com cautela."
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                quantity:
                  type: integer
                description:
                  type: string
      responses:
        '200':
          description: Registro atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustment'
        '404':
          description: Registro não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Relatórios
      summary: Remove um registro de ajuste de estoque
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Registro removido com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Erro ao remover o registro.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateUserInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "João Silva"
        email:
          type: string
          format: email
          example: "joao.silva@example.com"
    UpdateUserInput:
      type: object
      properties:
        name:
          type: string
          example: "João da Silva"
        email:
          type: string
          format: email
          example: "joao.d.silva@example.com"
    Item:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        quantity:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateItemInput:
      type: object
      required:
        - name
        - quantity
      properties:
        name:
          type: string
          example: "Parafuso Sextavado M8"
        quantity:
          type: integer
          example: 100
        description:
          type: string
          example: "Caixa com 100 unidades"
    UpdateItemInput:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
        description:
          type: string
    AdjustStockInput:
      type: object
      required:
        - type
        - quantity
        - userId
      properties:
        type:
          type: string
          enum: [IN, OUT]
        quantity:
          type: integer
          example: 10
        userId:
          type: string
          format: uuid
    StockAdjustment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [IN, OUT]
        quantity:
          type: integer
        createdAt:
          type: string
          format: date-time
        itemId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
    StockAdjustmentWithDetails:
      allOf:
        - $ref: '#/components/schemas/StockAdjustment'
        - type: object
          properties:
            item:
              $ref: '#/components/schemas/Item'
            user:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
    RequestLog:
      type: object
      properties:
        id:
          type: integer
        method:
          type: string
          example: "GET"
        path:
          type: string
          example: "/items"
        status:
          type: integer
          example: 200
        durationMs:
          type: integer
          example: 50
        createdAt:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: string
    ErrorValidation:
      type: object
      properties:
        error:
          type: string
          example: "Validation error"
        details:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              message:
                type: string